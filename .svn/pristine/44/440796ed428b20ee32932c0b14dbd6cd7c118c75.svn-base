// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// coeffupdate
std::vector<double> coeffupdate(const std::vector<double>& coeffs, const std::vector<double>& S, const std::vector<double>& SJ, const std::vector<double>& SS, const int& taustar, const double& sigsquared, const double& beta, const int& nrow, const int& ncol);
RcppExport SEXP _cpop_coeffupdate(SEXP coeffsSEXP, SEXP SSEXP, SEXP SJSEXP, SEXP SSSEXP, SEXP taustarSEXP, SEXP sigsquaredSEXP, SEXP betaSEXP, SEXP nrowSEXP, SEXP ncolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type coeffs(coeffsSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type SJ(SJSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type SS(SSSEXP);
    Rcpp::traits::input_parameter< const int& >::type taustar(taustarSEXP);
    Rcpp::traits::input_parameter< const double& >::type sigsquared(sigsquaredSEXP);
    Rcpp::traits::input_parameter< const double& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const int& >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< const int& >::type ncol(ncolSEXP);
    rcpp_result_gen = Rcpp::wrap(coeffupdate(coeffs, S, SJ, SS, taustar, sigsquared, beta, nrow, ncol));
    return rcpp_result_gen;
END_RCPP
}
// prune
std::vector<int> prune(const std::vector<double>& x, const int& nrows);
RcppExport SEXP _cpop_prune(SEXP xSEXP, SEXP nrowsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const int& >::type nrows(nrowsSEXP);
    rcpp_result_gen = Rcpp::wrap(prune(x, nrows));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_cpop_coeffupdate", (DL_FUNC) &_cpop_coeffupdate, 9},
    {"_cpop_prune", (DL_FUNC) &_cpop_prune, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_cpop(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
