// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// prune
std::vector<int> prune(const std::vector<double>& x, const int& nrows);
RcppExport SEXP _cpop_prune(SEXP xSEXP, SEXP nrowsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const int& >::type nrows(nrowsSEXP);
    rcpp_result_gen = Rcpp::wrap(prune(x, nrows));
    return rcpp_result_gen;
END_RCPP
}
// coeffs_update_cpp
std::list<std::vector<double> > coeffs_update_cpp(const std::vector<double>& SXY, const std::vector<double>& SX2, const std::vector<double>& S, const std::vector<double>& SS, const std::vector<double>& Xs, const std::vector<double>& SX, const std::vector<double>& SP, const std::vector<double>& Seglen, const int& taustar, const std::vector<int>& Sstar, const double& Xt);
RcppExport SEXP _cpop_coeffs_update_cpp(SEXP SXYSEXP, SEXP SX2SEXP, SEXP SSEXP, SEXP SSSEXP, SEXP XsSEXP, SEXP SXSEXP, SEXP SPSEXP, SEXP SeglenSEXP, SEXP taustarSEXP, SEXP SstarSEXP, SEXP XtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type SXY(SXYSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type SX2(SX2SEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type S(SSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type SS(SSSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type Xs(XsSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type SX(SXSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type SP(SPSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type Seglen(SeglenSEXP);
    Rcpp::traits::input_parameter< const int& >::type taustar(taustarSEXP);
    Rcpp::traits::input_parameter< const std::vector<int>& >::type Sstar(SstarSEXP);
    Rcpp::traits::input_parameter< const double& >::type Xt(XtSEXP);
    rcpp_result_gen = Rcpp::wrap(coeffs_update_cpp(SXY, SX2, S, SS, Xs, SX, SP, Seglen, taustar, Sstar, Xt));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_cpop_prune", (DL_FUNC) &_cpop_prune, 2},
    {"_cpop_coeffs_update_cpp", (DL_FUNC) &_cpop_coeffs_update_cpp, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_cpop(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
